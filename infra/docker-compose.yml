version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: celerentis
      POSTGRES_USER: celerentis
      POSTGRES_PASSWORD: celerentis123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U celerentis"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minio123
      MINIO_SERVER_URL: http://localhost:9000
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9000
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FastAPI Backend
  api:
    build:
      context: ..
      dockerfile: apps/api/Dockerfile
    environment:
      - POSTGRES_URL=postgresql+psycopg://celerentis:celerentis123@db:5432/celerentis
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_EXTERNAL_ENDPOINT=http://localhost:9000
      - S3_BUCKET=celerentis
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minio123
      - S3_REGION=eu-central-1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../packages/core:/app/packages/core
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  worker:
    build:
      context: ..
      dockerfile: apps/worker/Dockerfile
    environment:
      - POSTGRES_URL=postgresql+psycopg://celerentis:celerentis123@db:5432/celerentis
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_EXTERNAL_ENDPOINT=http://localhost:9000
      - S3_BUCKET=celerentis
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minio123
      - S3_REGION=eu-central-1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../packages/core:/app/packages/core
    command: celery -A worker.celery_app worker --loglevel=info

  # Next.js Frontend
  web:
    build:
      context: ..
      dockerfile: apps/web/Dockerfile
    environment:
      - NEXT_PUBLIC_API_BASE=http://api:8000
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ../apps/web:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  minio_data:
