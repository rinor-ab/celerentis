name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd packages/core
        pip install -e ".[dev]"
    
    - name: Run linting with Ruff
      run: |
        cd packages/core
        ruff check .
    
    - name: Run type checking with MyPy
      run: |
        cd packages/core
        mypy .
    
    - name: Run tests with pytest
      run: |
        cd packages/core
        pytest tests/ --cov=core --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./packages/core/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
    
    - name: Install dependencies
      run: |
        cd apps/web
        npm ci
    
    - name: Run linting
      run: |
        cd apps/web
        npm run lint
    
    - name: Build application
      run: |
        cd apps/web
        npm run build
