[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "celerentis-core"
version = "0.1.0"
description = "Core Python package for Celerentis AI IM Generator"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Celerentis Team"}
]
dependencies = [
    "python-pptx>=0.6.21",
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    "pymupdf>=1.23.0",
    "pdfplumber>=0.9.0",
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "boto3>=1.34.0",
    "pillow>=10.0.0",
    "requests>=2.31.0",
    "python-multipart>=0.0.6",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "pre-commit>=3.4.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "B", "I", "N", "UP", "W", "C4", "SIM", "ARG", "PIE", "T20", "Q", "RUF"]
ignore = ["E501", "B008", "C901"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=core --cov-report=term-missing --cov-report=html"
